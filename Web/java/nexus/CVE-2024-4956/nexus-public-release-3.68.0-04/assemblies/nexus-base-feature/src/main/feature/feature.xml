<!--

    Sonatype Nexus (TM) Open Source Version
    Copyright (c) 2008-present Sonatype, Inc.
    All rights reserved. Includes the third-party code listed at http://links.sonatype.com/products/nexus/oss/attributions.

    This program and the accompanying materials are made available under the terms of the Eclipse Public License Version 1.0,
    which accompanies this distribution and is available at http://www.eclipse.org/legal/epl-v10.html.

    Sonatype Nexus (TM) Professional Version is available from Sonatype, Inc. "Sonatype" and "Sonatype Nexus" are trademarks
    of Sonatype, Inc. Apache Maven is a trademark of the Apache Software Foundation. M2eclipse is a trademark of the
    Eclipse Foundation. All other trademarks are the property of their respective owners.

-->
<features>
  <feature name="${project.artifactId}">
    <!--
    Wrappers that require use of fragments
    -->
    <bundle>wrap:${mvn:jakarta.el}$overwrite=merge&amp;Fragment-Host=org.hibernate.validator</bundle>
    <bundle>wrap:${mvn:jakarta.validation-api}$overwrite=merge&amp;Fragment-Host=org.hibernate.validator</bundle>
    <bundle>wrap:${mvn:paranamer}$overwrite=merge&amp;Fragment-Host=org.hibernate.validator</bundle>
    <bundle>wrap:${mvn:httpcore}$Bundle-SymbolicName=httpcore</bundle>
    <bundle>wrap:${mvn:httpclient}$Bundle-SymbolicName=httpclient&amp;Fragment-Host=httpcore</bundle>
    <bundle>wrap:${mvn:resteasy-jaxrs}$Bundle-SymbolicName=resteasy-jaxrs&amp;Fragment-Host=org.sonatype.nexus.siesta</bundle>
    <bundle>wrap:${mvn:resteasy-atom-provider}$Bundle-SymbolicName=resteasy-atom-provider&amp;Fragment-Host=org.sonatype.nexus.siesta</bundle>
    <bundle>wrap:${mvn:resteasy-jackson2-provider}$Bundle-SymbolicName=resteasy-jackson2-provider&amp;Fragment-Host=org.sonatype.nexus.siesta</bundle>
    <bundle>wrap:${mvn:resteasy-jaxb-provider}$Bundle-SymbolicName=resteasy-jaxb-provider&amp;Fragment-Host=org.sonatype.nexus.siesta</bundle>
    <bundle>wrap:${mvn:resteasy-multipart-provider}$Bundle-SymbolicName=resteasy-multipart-provider&amp;Fragment-Host=org.sonatype.nexus.siesta</bundle>
    <bundle>wrap:${mvn:resteasy-validator-provider}$Bundle-SymbolicName=resteasy-validator-provider&amp;Fragment-Host=org.sonatype.nexus.siesta</bundle>
    <bundle>wrap:${mvn:resteasy-client}$Bundle-SymbolicName=resteasy-client&amp;Fragment-Host=org.sonatype.nexus.siesta</bundle>

    <!--
    Relax jackson-coreutils import constraints to workaround a bad import range for Guava
    -->
    <bundle>wrap:${mvn:jackson-coreutils}$overwrite=merge&amp;Import-Package=*</bundle>
    <bundle>wrap:${mvn:json-patch}$overwrite=merge&amp;Import-Package=*</bundle>

    <!--
    Relax Shiro-Guice import constraints to workaround a bad import range for javax.annotation
    -->
    <bundle>wrap:${mvn:shiro-guice}$overwrite=merge&amp;Import-Package=*</bundle>

    <!--
    Relax Guice import constraints to workaround a bad import range for javax.annotation,
    also prevent errant imports of com.google.inject.*
    -->
    <bundle>wrap:${mvn:guice}$overwrite=merge&amp;Import-Package=javax.annotation,!com.google.inject.*,*</bundle>

    <!--
    Relax Metrics-Guice import constraints so we can use latest release of dropwizard/codahale metrics
    -->
    <bundle>wrap:${mvn:metrics-guice}$overwrite=merge&amp;Import-Package=com.codahale.metrics*,*</bundle>

    <!--
    Relax Prometheus client import constraints so we can use latest release of dropwizard/codahale metrics
    -->
    <bundle>wrap:${mvn:simpleclient_dropwizard}$overwrite=merge&amp;Import-Package=com.codahale.metrics*,*</bundle>

    <!--
    Relax Swagger import constraints so we can use latest release of Guava, and make use of Reflections optional
    -->
    <bundle>wrap:${mvn:swagger-core}$overwrite=merge&amp;Import-Package=com.google.common.*,javax.validation.*,*</bundle>
    <bundle>wrap:${mvn:swagger-jaxrs}$overwrite=merge&amp;Import-Package=com.google.common.*,org.reflections.*;resolution:=optional,*</bundle>

    <!--
    Widen Quartz optional imports to include c3p0/hikari - use '*' to avoid repeating long list of existing optional imports
    -->
    <bundle>wrap:${mvn:quartz}$overwrite=merge&amp;Import-Package=*;resolution:=optional</bundle>

    <!--
    Give our extender bundle its own start level (distinct from the boot start-level)
    -->
    <bundle start-level="100">${mvn:nexus-extender}</bundle>
  </feature>
</features>
