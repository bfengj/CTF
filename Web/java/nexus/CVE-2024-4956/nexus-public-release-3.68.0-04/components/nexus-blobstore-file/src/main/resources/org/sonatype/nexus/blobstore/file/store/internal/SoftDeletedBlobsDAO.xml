<?xml version="1.0" encoding="UTF-8" ?>
<!--

    Sonatype Nexus (TM) Open Source Version
    Copyright (c) 2008-present Sonatype, Inc.
    All rights reserved. Includes the third-party code listed at http://links.sonatype.com/products/nexus/oss/attributions.

    This program and the accompanying materials are made available under the terms of the Eclipse Public License Version 1.0,
    which accompanies this distribution and is available at http://www.eclipse.org/legal/epl-v10.html.

    Sonatype Nexus (TM) Professional Version is available from Sonatype, Inc. "Sonatype" and "Sonatype Nexus" are trademarks
    of Sonatype, Inc. Apache Maven is a trademark of the Apache Software Foundation. M2eclipse is a trademark of the
    Eclipse Foundation. All other trademarks are the property of their respective owners.

-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.sonatype.nexus.blobstore.file.store.internal.SoftDeletedBlobsDAO">

  <insert id="createSchema">
    CREATE TABLE IF NOT EXISTS soft_deleted_blobs
    (
      record_id INTEGER GENERATED BY DEFAULT AS IDENTITY,
      blob_id VARCHAR(256) NOT NULL,
      source_blob_store_name VARCHAR(256) NOT NULL,
      deleted_date TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT CURRENT_TIMESTAMP,
      CONSTRAINT pk_soft_deleted_blobs_record_id PRIMARY KEY (record_id)
    );

    CREATE INDEX IF NOT EXISTS idx_soft_deleted_blobs_source_blob_store_name
        ON soft_deleted_blobs (source_blob_store_name, blob_id);
  </insert>

  <insert id="createRecord">
    INSERT INTO soft_deleted_blobs (blob_id, source_blob_store_name)
        VALUES (#{blobId}, #{sourceBlobStoreName});
  </insert>

  <select id="readRecords" resultType="org.sonatype.nexus.blobstore.file.store.SoftDeletedBlobsData" >
    SELECT * FROM soft_deleted_blobs
    WHERE source_blob_store_name = #{sourceBlobStoreName}
    <if test="continuationToken != null"> AND record_id > #{continuationToken}</if>
  </select>

  <delete id="deleteRecord">
    DELETE FROM soft_deleted_blobs
    WHERE source_blob_store_name = #{sourceBlobStoreName} AND blob_id = #{blobId};
  </delete>

  <delete id="deleteAllRecords">
    DELETE FROM soft_deleted_blobs
    WHERE source_blob_store_name = #{sourceBlobStoreName}
    LIMIT #{limit}
  </delete>

  <delete id="deleteAllRecords" databaseId="PostgreSQL">
    DELETE
    FROM soft_deleted_blobs
    WHERE record_id IN
    (
        SELECT record_id
        FROM soft_deleted_blobs
        WHERE source_blob_store_name = #{sourceBlobStoreName}
        LIMIT #{limit}
    )
  </delete>

  <select id="count" resultType="java.lang.Integer">
    SELECT COUNT(*)
    FROM soft_deleted_blobs
    WHERE source_blob_store_name = #{sourceBlobStoreName};
  </select>

  <select id="readOldestRecords" resultType="java.lang.String">
    SELECT blob_id FROM soft_deleted_blobs
    WHERE source_blob_store_name = #{sourceBlobStoreName}
    ORDER BY deleted_date ASC LIMIT 20
  </select>

</mapper>
