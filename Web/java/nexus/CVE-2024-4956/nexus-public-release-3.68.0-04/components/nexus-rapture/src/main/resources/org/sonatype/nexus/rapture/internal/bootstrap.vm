#*
 * Sonatype Nexus (TM) Open Source Version
 * Copyright (c) 2008-present Sonatype, Inc.
 * All rights reserved. Includes the third-party code listed at http://links.sonatype.com/products/nexus/oss/attributions.
 *
 * This program and the accompanying materials are made available under the terms of the Eclipse Public License Version 1.0,
 * which accompanies this distribution and is available at http://www.eclipse.org/legal/epl-v10.html.
 *
 * Sonatype Nexus (TM) Professional Version is available from Sonatype, Inc. "Sonatype" and "Sonatype Nexus" are trademarks
 * of Sonatype, Inc. Apache Maven is a trademark of the Apache Software Foundation. M2eclipse is a trademark of the
 * Eclipse Foundation. All other trademarks are the property of their respective owners.
 *###
## Dynamic loader configuration
Ext.Loader.setConfig({
  #if($debug)
    enabled: true,
    paths: {
      NX: 'static/rapture/NX'
    }
  #else
    enabled: false
  #end
});

## add plugin namespaces needed for loading
#foreach($ns in $namespaces)
  Ext.app.addNamespaces('$ns');
#end

## provide tool-agnostic reference to the global/window object
Ext.ns('NX');
NX.global = (function() {
  if (window !== undefined) {
    return window;
  }
  if (global !== undefined) {
    return global;
  }
  Ext.Error.raise('Unable to determine global object');
}());

## HACK: Needed by NX.util.Url in class-def, should update that to reference dynamically and move this to loader state config
Ext.ns('NX.app');
NX.app.baseUrl = '$baseUrl';
NX.app.relativePath = '.';
NX.app.urlSuffix = '$urlSuffix';
